{"version":3,"sources":["services/api.js","components/CryptoDashboard.jsx","App.jsx","index.js"],"names":["API_URL","fetchCoins","async","axios","get","data","error","console","postHistory","post","historyData","CryptoDashboard","coins","setCoins","useState","loading","setLoading","getCoinsData","useEffect","interval","setInterval","saveHistory","clearInterval","_jsx","children","_jsxs","map","coin","_coin$current_price","_coin$market_cap","name","symbol","current_price","toFixed","market_cap","toLocaleString","price_change_percentage_24h","ath_date","coinId","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"0NAEA,MAAMA,EAAU,mDAEHC,EAAaC,UACtB,IAEI,aADuBC,IAAMC,IAAI,GAAGJ,YACpBK,IACpB,CAAE,MAAOC,GAEL,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,CACV,GAGSE,EAAcN,UACvB,IAEI,aADuBC,IAAMM,KAAK,GAAGT,YAAmBU,IACxCL,IACpB,CAAE,MAAOC,GAEL,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACV,G,WCkDWK,MApESA,KACpB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,oBAAS,GAEjCG,EAAef,UACjB,IACI,MAAMG,QAAaJ,IACnBY,EAASR,GACTW,GAAW,EACf,CAAE,MAAOV,GACLC,QAAQD,MAAM,6BAA8BA,GAC5CU,GAAW,EACf,GAqBJ,OAVAE,oBAAU,KACND,IACA,MAAME,EAAWC,YAAY,KACzBH,IAXYf,WAChB,UACUM,EAAYI,EACtB,CAAE,MAAON,GACLC,QAAQD,MAAM,6BAA8BA,EAChD,GAOIe,IACD,MAEH,MAAO,IAAMC,cAAcH,IAC5B,IAECJ,EACOQ,cAAA,OAAAC,SAAK,eAIZC,eAAA,OAAAD,SAAA,CACID,cAAA,MAAAC,SAAI,6BACJC,eAAA,SAAAD,SAAA,CACID,cAAA,SAAAC,SACIC,eAAA,MAAAD,SAAA,CACID,cAAA,MAAAC,SAAI,SACJD,cAAA,MAAAC,SAAI,WACJD,cAAA,MAAAC,SAAI,UACJD,cAAA,MAAAC,SAAI,eACJD,cAAA,MAAAC,SAAI,eACJD,cAAA,MAAAC,SAAI,cAGZD,cAAA,SAAAC,SACKZ,EAAMc,IAAIC,IAAI,IAAAC,EAAAC,EAAA,OACXJ,eAAA,MAAAD,SAAA,CACID,cAAA,MAAAC,SAAS,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMG,OACXP,cAAA,MAAAC,SAAS,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMI,SACXN,eAAA,MAAAD,SAAA,CAAI,IAAM,OAAJG,QAAI,IAAJA,GAAmB,QAAfC,EAAJD,EAAMK,qBAAa,IAAAJ,OAAf,EAAJA,EAAqBK,QAAQ,MACnCR,eAAA,MAAAD,SAAA,CAAI,IAAM,OAAJG,QAAI,IAAJA,GAAgB,QAAZE,EAAJF,EAAMO,kBAAU,IAAAL,OAAZ,EAAJA,EAAkBM,oBACxBV,eAAA,MAAAD,SAAA,CAAS,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMS,4BAA4B,OACvCb,cAAA,MAAAC,SAAS,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aANF,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,mBCtBxBC,MA9BHA,KACR,MAAO3B,EAAOC,GAAYC,mBAAS,IAE7BG,EAAef,UACjB,MAAMG,QAAaJ,IACnBY,EAASR,IAiBb,OAVAa,oBAAU,KACND,IACA,MAAME,EAAWC,YAAY,KACzBH,IAPYf,iBACVM,EAAYI,IAOdS,IACD,MAEH,MAAO,IAAMC,cAAcH,IAC5B,IAGCM,eAAA,OAAAD,SAAA,CACID,cAAA,MAAAC,SAAI,2BACJD,cAACZ,EAAe,CAACC,MAAOA,Q,MCxBpC4B,IAASC,OACPlB,cAACmB,IAAMC,WAAU,CAAAnB,SACfD,cAACgB,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.5631b3f2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://crypto-backend-new-osvy.onrender.com/api';\n\nexport const fetchCoins = async () => {\n    try {\n        const response = await axios.get(`${API_URL}/coins`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching coins:', error);\n        throw error;\n    }\n};\n\nexport const postHistory = async (historyData) => {\n    try {\n        const response = await axios.post(`${API_URL}/history`, historyData);\n        return response.data;\n    } catch (error) {\n        console.error('Error posting history:', error);\n        throw error;\n    }\n};","import React, { useEffect, useState } from 'react';\nimport { fetchCoins, postHistory } from '../services/api';\n\nconst CryptoDashboard = () => {\n    const [coins, setCoins] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const getCoinsData = async () => {\n        try {\n            const data = await fetchCoins();\n            setCoins(data);\n            setLoading(false);\n        } catch (error) {\n            console.error(\"Error fetching coins data:\", error);\n            setLoading(false);\n        }\n    };\n\n    const saveHistory = async () => {\n        try {\n            await postHistory(coins);\n        } catch (error) {\n            console.error(\"Error saving history data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        getCoinsData();\n        const interval = setInterval(() => {\n            getCoinsData();\n            saveHistory();\n        }, 1800000); // 30 minutes\n\n        return () => clearInterval(interval);\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h1>Cryptocurrency Dashboard</h1>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Symbol</th>\n                        <th>Price</th>\n                        <th>Market Cap</th>\n                        <th>Change (%)</th>\n                        <th>Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {coins.map(coin => (\n                        <tr key={coin?.coinId}>\n                            <td>{coin?.name}</td>\n                            <td>{coin?.symbol}</td>\n                            <td>${coin?.current_price?.toFixed(2)}</td>\n                            <td>${coin?.market_cap?.toLocaleString()}</td>\n                            <td>{coin?.price_change_percentage_24h}%</td>\n                            <td>{coin?.ath_date}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default CryptoDashboard;","import React, { useEffect, useState } from 'react';\nimport CryptoDashboard from './components/CryptoDashboard';\nimport { fetchCoins, postHistory } from './services/api';\n\nconst App = () => {\n    const [coins, setCoins] = useState([]);\n\n    const getCoinsData = async () => {\n        const data = await fetchCoins();\n        setCoins(data);\n    };\n\n    const saveHistory = async () => {\n        await postHistory(coins);\n    };\n\n    useEffect(() => {\n        getCoinsData();\n        const interval = setInterval(() => {\n            getCoinsData();\n            saveHistory();\n        }, 1800000); // 30 minutes\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div>\n            <h1>Cryptocurrency Tracker</h1>\n            <CryptoDashboard coins={coins} />\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}